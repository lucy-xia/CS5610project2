{"ast":null,"code":"var _jsxFileName = \"/Users/coco/Desktop/CS5610project2/src/components/Rule.jsx\";\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const Rule = () => {\n//   return (\n//     <div>\n//       <h1>Rule</h1>\n//       <h2>1.Enter a 5-letter word</h2>\n//       <h2>2.Check the tile colors.</h2>\n//       <h3>\n//         {' '}\n//         - A green tile indicates that you've guessed the correct letter in the\n//         correct place in the word\n//       </h3>\n//       <h3>\n//         {' '}\n//         - A yellow tile means you've guessed a letter that's in the word, but\n//         not in the right spot\n//       </h3>\n//       <h3> - A gray tile means that letter is not in today's word</h3>\n//       <h2>3.Guess another word</h2>\n//       <h3>\n//         {' '}\n//         - If you correctly guessed a letter at the correct position (a green\n//         tile), make sure to use that letter at that position in your second\n//         guess.\n//       </h3>\n//       <h3> - Letters can appear more than once in the same word</h3>\n//       <h2>4.Continue entering your guesses until all letters are green</h2>\n//       <br />\n//       <ul>\n//         <li>\n//           <Link to=\"/\">Home</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/hard\">Difficult</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/easy\">Easy</Link>\n//         </li>\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Rule;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Rule.css'; // import a CSS file with custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rule = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rule-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"rule-title\",\n      children: \"How to Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rule-steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rule-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a 5-letter word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rule-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Check the tile colors:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"green-tile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), \"A green tile indicates that you've guessed the correct letter in the correct place in the word\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"yellow-tile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), \"A yellow tile means you've guessed a letter that's in the word, but not in the right spot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gray-tile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), \"A gray tile means that letter is not in today's word\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rule-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Guess another word:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If you correctly guessed a letter at the correct position (a green tile), make sure to use that letter at that position in your second guess.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Letters can appear more than once in the same word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rule-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Step 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Continue entering your guesses until all letters are green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rule-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/hard\",\n        children: \"Difficult\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/easy\",\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = Rule;\nvar _c;\n$RefreshReg$(_c, \"Rule\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Rule","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/coco/Desktop/CS5610project2/src/components/Rule.jsx"],"sourcesContent":["// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const Rule = () => {\n//   return (\n//     <div>\n//       <h1>Rule</h1>\n//       <h2>1.Enter a 5-letter word</h2>\n//       <h2>2.Check the tile colors.</h2>\n//       <h3>\n//         {' '}\n//         - A green tile indicates that you've guessed the correct letter in the\n//         correct place in the word\n//       </h3>\n//       <h3>\n//         {' '}\n//         - A yellow tile means you've guessed a letter that's in the word, but\n//         not in the right spot\n//       </h3>\n//       <h3> - A gray tile means that letter is not in today's word</h3>\n//       <h2>3.Guess another word</h2>\n//       <h3>\n//         {' '}\n//         - If you correctly guessed a letter at the correct position (a green\n//         tile), make sure to use that letter at that position in your second\n//         guess.\n//       </h3>\n//       <h3> - Letters can appear more than once in the same word</h3>\n//       <h2>4.Continue entering your guesses until all letters are green</h2>\n//       <br />\n//       <ul>\n//         <li>\n//           <Link to=\"/\">Home</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/hard\">Difficult</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/easy\">Easy</Link>\n//         </li>\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Rule;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Rule.css'; // import a CSS file with custom styles\n\nconst Rule = () => {\n  return (\n    <div className=\"rule-container\"> {/* add a class to apply custom styles */}\n      <h1 className=\"rule-title\">How to Play</h1>\n      <div className=\"rule-steps\">\n        <div className=\"rule-step\">\n          <h2>Step 1</h2>\n          <p>Enter a 5-letter word</p>\n        </div>\n        <div className=\"rule-step\">\n          <h2>Step 2</h2>\n          <p>\n            Check the tile colors:\n            <ul>\n              <li>\n                <span className=\"green-tile\"></span>\n                A green tile indicates that you've guessed the correct letter in the correct place in the word\n              </li>\n              <li>\n                <span className=\"yellow-tile\"></span>\n                A yellow tile means you've guessed a letter that's in the word, but not in the right spot\n              </li>\n              <li>\n                <span className=\"gray-tile\"></span>\n                A gray tile means that letter is not in today's word\n              </li>\n            </ul>\n          </p>\n        </div>\n        <div className=\"rule-step\">\n          <h2>Step 3</h2>\n          <p>\n            Guess another word:\n            <ul>\n              <li>\n                If you correctly guessed a letter at the correct position (a green tile), make sure to use that letter at that position in your second guess.\n              </li>\n              <li>\n                Letters can appear more than once in the same word\n              </li>\n            </ul>\n          </p>\n        </div>\n        <div className=\"rule-step\">\n          <h2>Step 4</h2>\n          <p>Continue entering your guesses until all letters are green</p>\n        </div>\n      </div>\n      <div className=\"rule-links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/hard\">Difficult</Link>\n        <Link to=\"/easy\">Easy</Link>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}