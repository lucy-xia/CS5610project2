[{"/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/index.js":"1","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/App.js":"2","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/reportWebVitals.js":"3","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/store/index.js":"4","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/rulePage.jsx":"5","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/home.jsx":"6","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/game.jsx":"7","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/inputbox.jsx":"8","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/rule.jsx":"9","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/ruletext.jsx":"10","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/alertboxenter.jsx":"11","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/alertboxdif.jsx":"12","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/alertword.jsx":"13"},{"size":1365,"mtime":1679079468025,"results":"14","hashOfConfig":"15"},{"size":209,"mtime":1678917800000,"results":"16","hashOfConfig":"15"},{"size":376,"mtime":1679095684000,"results":"17","hashOfConfig":"15"},{"size":904,"mtime":1679090116000,"results":"18","hashOfConfig":"15"},{"size":592,"mtime":1679001062000,"results":"19","hashOfConfig":"15"},{"size":1666,"mtime":1679077568549,"results":"20","hashOfConfig":"15"},{"size":15850,"mtime":1679073253351,"results":"21","hashOfConfig":"15"},{"size":941,"mtime":1678996524000,"results":"22","hashOfConfig":"15"},{"size":656,"mtime":1679000008000,"results":"23","hashOfConfig":"15"},{"size":1139,"mtime":1679004242000,"results":"24","hashOfConfig":"15"},{"size":536,"mtime":1679000038000,"results":"25","hashOfConfig":"15"},{"size":536,"mtime":1679000394000,"results":"26","hashOfConfig":"15"},{"size":525,"mtime":1679065630000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1jner5p",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"35"},"/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/index.js",["79","80","81","82","83","84"],[],"/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/App.js",["85","86"],[],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Outlet, Link } from 'react-router-dom';\r\n\r\nfunction App () {\r\n  return (\r\n    <div>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",[],"/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/reportWebVitals.js",[],[],[],"/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/store/index.js",["87"],[],"import { createStore } from \"redux\";\r\nfunction reducer (state = {\r\n  /* 游戏难度 */\r\n  type: localStorage.getItem('type') == null ? 0 : localStorage.getItem('type'),\r\n  /* 规则弹框 */\r\n  ruleState: false\r\n}, action) {\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case \"normal\":\r\n      localStorage.setItem('type', 1)\r\n\r\n      return {\r\n        type: 1,\r\n        ruleState: state.ruleState\r\n      }\r\n    case \"hard\":\r\n      localStorage.setItem('type', 2)\r\n      return {\r\n        type: 2,\r\n        ruleState: state.ruleState\r\n      }\r\n    case \"showruleState\":\r\n      console.log(state)\r\n      return {\r\n        type: state.type,\r\n        ruleState: true\r\n      }\r\n    case \"hideruleState\":\r\n      localStorage.setItem('type', 2)\r\n      return {\r\n        type: state.type,\r\n        ruleState: false\r\n      }\r\n  }\r\n  return state;\r\n}\r\nconst store = createStore(reducer);\r\nexport { store };","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/rulePage.jsx",["88","89"],[],"\r\nimport React, { useEffect } from 'react';\r\nimport Ruletext from './ruletext'\r\nimport { Outlet, Link } from 'react-router-dom';\r\nexport default function Rule (props) {\r\n  // 子向父传值\r\n  const { setMaking } = props;\r\n  const changeState = (event) => {\r\n    setMaking(false)\r\n  };\r\n  useEffect(() => {\r\n    // document.title = `Hello, ${props.name}`;\r\n  }, []);\r\n\r\n  return (\r\n    <div className='RuleBox'>\r\n      <p className='tit'>rule</p>\r\n      <Ruletext />\r\n      <p className='footers'>\r\n        <Link to='/home' className='defaultbtn'>back</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/home.jsx",["90","91"],[],"/*  */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n/* 頁面跳轉 */\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Rule from './rule';\r\nconst FatherContext = React.createContext({});\r\n\r\nexport default function Home(props) {\r\n  let type = Number(useSelector(state => state.type));\r\n  const dispatch = useDispatch();\r\n  let [Making, setMaking] = useState(false); /* 弹框显示隐藏 */\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div id=\"bjbox\">\r\n      <div id=\"start\">\r\n        <h1>Wordle Game</h1>\r\n        <button\r\n          className=\"defaultbtn\"\r\n          onClick={() => {\r\n            if (type != 0) {\r\n              localStorage.clear();\r\n            }\r\n            dispatch({\r\n              type: 'normal',\r\n            });\r\n            navigate(`/game/normal`);\r\n          }}\r\n        >\r\n          normal\r\n        </button>\r\n        <button\r\n          className=\"defaultbtn\"\r\n          onClick={() => {\r\n            if (type != 0) {\r\n              localStorage.clear();\r\n            }\r\n            dispatch({\r\n              type: 'hard',\r\n            });\r\n            navigate(`/game/hard`);\r\n          }}\r\n        >\r\n          hard\r\n        </button>\r\n        <button\r\n          className=\"defaultbtn\"\r\n          onClick={() => {\r\n            // setMaking(true)\r\n            navigate('/rule');\r\n          }}\r\n        >\r\n          Rule\r\n        </button>\r\n      </div>\r\n      <FatherContext.Provider value={Making}>\r\n        {Making === true ? <Rule setMaking={setMaking} /> : ''}\r\n      </FatherContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/game.jsx",["92","93","94","95","96","97","98"],["99"],"/*  */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n/* 頁面跳轉 */\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n/* 顶部文字组件 */\r\nimport Inputbox from './inputbox';\r\n/* 弹框组件 */\r\nimport AlertBoxenter from './alertboxenter';\r\n/* 位数缺少提示 */\r\nimport AlertBoxdif from './alertboxdif';\r\n/* 单词提示 */\r\nimport AlertWord from './alertword';\r\n/* 规则弹框 */\r\nimport Rule from './rule';\r\nexport const FatherContext = React.createContext({});\r\nexport default function Game(props) {\r\n  /* 获取存储在redux中的状态 */\r\n  let type = Number(useSelector(state => state.type));\r\n  /* 规则弹框显示隐藏 */\r\n  let ruleState = useSelector(state => state.ruleState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  /* 全局存储单词（正确答案） */\r\n  const [targetWord, settargetWord] = useState(\r\n    localStorage.getItem('targetWord') === null\r\n      ? []\r\n      : JSON.parse(localStorage.getItem('targetWord'))\r\n  );\r\n  /* 输入框输入的字符 */\r\n  const [currentGuess, setcurrentGuess] = useState(\r\n    localStorage.getItem('currentGuess') === null\r\n      ? []\r\n      : JSON.parse(localStorage.getItem('currentGuess'))\r\n  );\r\n  /* 结果列表 */\r\n  const [guesslist, setguesslist] = useState(\r\n    localStorage.getItem('guesslist') === null\r\n      ? []\r\n      : JSON.parse(localStorage.getItem('guesslist'))\r\n  );\r\n  /* 是否显示晃动css3效果 */\r\n  const [shake, setshake] = useState(false);\r\n  /* 防止重复点击提交 */\r\n  const [enterclick, setenterclick] = useState(true);\r\n  /* 位数缺少弹框 */\r\n  const [deficiency, setdeficiency] = useState(false);\r\n  /* 提示点击enter重新开始游戏弹框 */\r\n  const [enterState, setenterState] = useState(false);\r\n  /*提示单词是否有效 */\r\n  const [Word, setWord] = useState(false);\r\n  /* 页面初始化获取单词 */\r\n  if (targetWord.length === 0) {\r\n    getTargetWord();\r\n  }\r\n\r\n  const changeworldState = () => {\r\n    let url = window.location.href;\r\n    console.log(url);\r\n    if (url.indexOf('normal') != -1) {\r\n      /* 如果是简单的 */\r\n      console.log(type);\r\n      if (type != 1) {\r\n        localStorage.removeItem('targetWord');\r\n        localStorage.removeItem('currentGuess');\r\n        localStorage.removeItem('guesslist');\r\n        dispatch({\r\n          type: 'normal',\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } else if (url.indexOf('hard') != -1) {\r\n      /* 如果是困难的 */\r\n      if (type != 2) {\r\n        localStorage.removeItem('targetWord');\r\n        localStorage.removeItem('currentGuess');\r\n        localStorage.removeItem('guesslist');\r\n        dispatch({\r\n          type: 'hard',\r\n        });\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  // console.log(useParams())\r\n  /* 页面初始化调用 */\r\n  useEffect(() => {\r\n    /* 修改链接状态 */\r\n    changeworldState();\r\n  }, []); // eslint-disable-line\r\n  /* 显示当前选择的难度 */\r\n  function showDegree() {\r\n    if (type === 1) {\r\n      return 'normal';\r\n    } else {\r\n      return 'hard';\r\n    }\r\n  }\r\n  /* 页面键盘点击事件绑定 */\r\n  const keySubmit = e => {\r\n    run(e.target.value);\r\n  };\r\n  /* 页面程序运行 */\r\n  function run(val) {\r\n    let size = type === 1 ? 6 : 7; /* 答题的次数 */\r\n    let key = val;\r\n    var p = /^[A-Za-z]+$/;\r\n    /* 如果输入的为26个英文字母 */\r\n    if (p.test(key) && key.length === 1) {\r\n      /* 追加字符 */\r\n      if (currentGuess.length < size) {\r\n        let guess = currentGuess; /* 当前的单词 */\r\n        guess.push(key.toUpperCase()); /* 追加键入的单词 */\r\n        /* 设置输入框显示*/\r\n        setcurrentGuess([...guess]);\r\n        /* 存储设定的单词 */\r\n        localStorage.setItem('currentGuess', JSON.stringify(currentGuess));\r\n      }\r\n    } else if (key === 'Backspace' || key === 'backspace') {\r\n      /* 撤销键入 */\r\n      let guess = currentGuess.slice(0, -1);\r\n      /* 重置输入框显示*/\r\n      setcurrentGuess(guess);\r\n      localStorage.setItem('currentGuess', JSON.stringify(guess));\r\n    } else if (key === 'Escape' || key === 'newgame') {\r\n      /* 重新开始游戏 */\r\n      newgame('restart');\r\n    } else if (key === 'Enter' || key === 'enter') {\r\n      /* 增加状态，防止重复点击提交 */\r\n      if (enterclick === true) {\r\n        setenterclick(false);\r\n        /* 3秒后可以再次点击提交 */\r\n        setTimeout(function () {\r\n          setenterclick(true);\r\n        }, 3000);\r\n        if (\r\n          (type === 1 && guesslist.length === 6) ||\r\n          (type === 2 && guesslist.length === 5)\r\n        ) {\r\n          /* 游戏已结束,让用户重新开始 */\r\n          setenterState(true);\r\n        } else {\r\n          /* 如果满足指定长度 */\r\n          if (currentGuess.length === size) {\r\n            /* 验证结果 */\r\n            Validate();\r\n            // /* 清空输入框字符显示 */\r\n            // setcurrentGuess([])\r\n            /* 清空本地存储输入框字符 */\r\n            localStorage.setItem('currentGuess', JSON.stringify([]));\r\n          } else {\r\n            /* 输入不足指定位数 */\r\n            setdeficiency(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* 全部正确显示提示信息 */\r\n  function newgame(state) {\r\n    let result = '';\r\n    /* 如果是全部答对，重新开始 */\r\n    if (state === 'success') {\r\n      result = window.confirm('Congratulations!  Would you like to try again?');\r\n    } else if (state === 'restart') {\r\n      // 如果是点击按钮重新开始\r\n      result = window.confirm('Are you sure you want to restart the game?');\r\n    }\r\n\r\n    if (result === true) {\r\n      localStorage.clear();\r\n      /* 跳转首页，重新选择难度开始游戏 */\r\n      navigate(`/home`);\r\n    } else {\r\n    }\r\n  }\r\n  /* 验证结果 */\r\n  function Validate() {\r\n    /* 验证是否为有效单词 */\r\n    //Check if it is a valid english word\r\n    fetch(\r\n      `https://api.dictionaryapi.dev/api/v2/entries/en/${currentGuess\r\n        .join('')\r\n        .toLocaleLowerCase()}`\r\n    ).then(res => {\r\n      if (res.status == '404') {\r\n        /* 左右晃动动画 */\r\n        setshake(true);\r\n        setWord(true);\r\n        setTimeout(function () {\r\n          setshake(false);\r\n        }, 2000);\r\n      } else {\r\n        checkSpelling();\r\n      }\r\n    });\r\n  }\r\n  /* 添加数据到结果列表 */\r\n  function addGuess(guess) {\r\n    if (guess.length !== 0) {\r\n      let guessdata = guesslist;\r\n      guessdata.push(guess);\r\n      setguesslist(guessdata);\r\n      /* 更新输入框字符显示 */\r\n      setcurrentGuess([]);\r\n      localStorage.setItem('guesslist', JSON.stringify(guesslist));\r\n    }\r\n    /* 开始新游戏 */\r\n    // 如果列表没数据开始新游戏\r\n    if (guesslist.length === 0 || guesslist === []) {\r\n      restart();\r\n      getTargetWord();\r\n    } else {\r\n    }\r\n  }\r\n  /* 验证结果 */\r\n  async function checkSpelling() {\r\n    // const response = await fetch(`https://trex-sandwich.com/ajax/word/${currentGuess.join('').toLocaleLowerCase()}`);\r\n    //     const data = await response.json();\r\n    const data = JSON.parse(localStorage.getItem('targetWord'))\r\n      .join('')\r\n      .toLocaleLowerCase();\r\n\r\n    if (data === currentGuess.join('').toLocaleLowerCase()) {\r\n      /* 回答正确 */\r\n      let result = currentGuess.map(ele => {\r\n        let data = {\r\n          data: ele,\r\n          state: 'green',\r\n        };\r\n        return data;\r\n      });\r\n      /* 重置输入框显示 */\r\n      restart();\r\n      /* 添加数据到结果列表 */\r\n      addGuess(result);\r\n      /* 回答正确重新开始 */\r\n      newgame('success');\r\n    } else {\r\n      /* 回答错误 */\r\n      let result = [];\r\n      currentGuess.forEach((ele, i) => {\r\n        /* 相同且位置正确 */\r\n        if (targetWord[i] === ele) {\r\n          result.push({\r\n            data: ele,\r\n            state: 'green',\r\n          });\r\n        } else if (targetWord.indexOf(ele) !== -1 && targetWord[i] !== ele) {\r\n          /* 存在但位置不正确 */\r\n          result.push({\r\n            data: ele,\r\n            state: 'orange',\r\n          });\r\n        } else if (targetWord.indexOf(ele) === -1) {\r\n          /* 不存在 */\r\n          result.push({\r\n            data: ele,\r\n            state: 'gray',\r\n          });\r\n        }\r\n      });\r\n\r\n      /* 左右晃动动画 */\r\n      setshake(true);\r\n      setTimeout(function () {\r\n        setshake(false);\r\n        /* 添加数据到结果列表 */\r\n        addGuess(result);\r\n        /* 如果大于指定次数，需要重新开始游戏 */\r\n        if (\r\n          (type === 1 && guesslist.length === 6) ||\r\n          (type === 2 && guesslist.length === 5)\r\n        ) {\r\n          let result = window.confirm(\r\n            `Failure,The answer ${targetWord}, whether to restart the game?`\r\n          );\r\n          if (result === true) {\r\n            localStorage.clear();\r\n            /* 跳转首页，重新选择难度开始游戏 */\r\n            navigate(`/home`);\r\n          }\r\n        }\r\n      }, 2000);\r\n    }\r\n  }\r\n  /* 全局获取初始化的单词 */\r\n  async function getTargetWord() {\r\n    const words = await getWords(1);\r\n    settargetWord(words.word.toUpperCase().split(''));\r\n    localStorage.setItem(\r\n      'targetWord',\r\n      JSON.stringify(words.word.toUpperCase().split(''))\r\n    );\r\n  }\r\n  /* 重置输入的内容 */\r\n  function restart() {\r\n    let size = type === 1 ? 6 : 7;\r\n    /* 更新输入框字符显示 */\r\n    setcurrentGuess([]);\r\n    localStorage.setItem('currentGuess', JSON.stringify([]));\r\n  }\r\n  /* 获取单词接口 */\r\n  async function getWords(count) {\r\n    const response = await fetch(\r\n      `https://trex-sandwich.com/ajax/word?count=${count}&length=${\r\n        type === 1 ? 6 : 7\r\n      }`\r\n    );\r\n    const data = await response.json();\r\n    const targetWord = data[0];\r\n    settargetWord(data[0]);\r\n    return targetWord;\r\n  }\r\n  return (\r\n    <div id=\"game\">\r\n      <div className=\"fn-clear level\">\r\n        <span className=\"fl\">Current difficulty level：{showDegree()}</span>\r\n        <span className=\"fr\">\r\n          The number of attempts remaining：\r\n          {type === 1 ? 6 - guesslist.length : 5 - guesslist.length}\r\n        </span>\r\n      </div>\r\n      <div className=\"btnbox\">\r\n        <button\r\n          className=\"defaultbtn\"\r\n          onClick={() => {\r\n            dispatch({\r\n              type: 'showruleState',\r\n            });\r\n          }}\r\n        >\r\n          Rule\r\n        </button>\r\n        <Link to=\"/home\" className=\"defaultbtn\">\r\n          Home\r\n        </Link>\r\n      </div>\r\n      <FatherContext.Provider value={currentGuess}>\r\n        {shake === false ? (\r\n          <div id=\"current-guess\">\r\n            <Inputbox />\r\n          </div>\r\n        ) : (\r\n          <div id=\"current-guess\" className=\"animate__animated animate__shakeX\">\r\n            <Inputbox />\r\n          </div>\r\n        )}\r\n      </FatherContext.Provider>\r\n      <hr />\r\n      <div className=\"game_rows\">\r\n        {guesslist.map((ele, i) => {\r\n          return (\r\n            <div className=\"Row\" key={i}>\r\n              {[...ele].map((m, n) => {\r\n                return (\r\n                  <div\r\n                    className=\"Row-letter\"\r\n                    key={n}\r\n                    style={{ backgroundColor: m.state }}\r\n                  >\r\n                    {m.data}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <hr />\r\n      <div id=\"keyboard\">\r\n        <div className=\"row\">\r\n          <button className=\"key\" value=\"q\" onClick={keySubmit}>\r\n            Q\r\n          </button>\r\n          <button className=\"key\" value=\"w\" onClick={keySubmit}>\r\n            W\r\n          </button>\r\n          <button className=\"key\" value=\"e\" onClick={keySubmit}>\r\n            E\r\n          </button>\r\n          <button className=\"key\" value=\"r\" onClick={keySubmit}>\r\n            R\r\n          </button>\r\n          <button className=\"key\" value=\"t\" onClick={keySubmit}>\r\n            T\r\n          </button>\r\n          <button className=\"key\" value=\"y\" onClick={keySubmit}>\r\n            Y\r\n          </button>\r\n          <button className=\"key\" value=\"u\" onClick={keySubmit}>\r\n            U\r\n          </button>\r\n          <button className=\"key\" value=\"i\" onClick={keySubmit}>\r\n            I\r\n          </button>\r\n          <button className=\"key\" value=\"o\" onClick={keySubmit}>\r\n            O\r\n          </button>\r\n          <button className=\"key\" value=\"p\" onClick={keySubmit}>\r\n            P\r\n          </button>\r\n          <button\r\n            id=\"backspace\"\r\n            className=\"key\"\r\n            value=\"backspace\"\r\n            onClick={keySubmit}\r\n          >\r\n            Backspace\r\n          </button>\r\n        </div>\r\n        <div id=\"row-2\" className=\"row\">\r\n          <button className=\"key\" value=\"a\" onClick={keySubmit}>\r\n            A\r\n          </button>\r\n          <button className=\"key\" value=\"s\" onClick={keySubmit}>\r\n            S\r\n          </button>\r\n          <button className=\"key\" value=\"d\" onClick={keySubmit}>\r\n            D\r\n          </button>\r\n          <button className=\"key\" value=\"f\" onClick={keySubmit}>\r\n            F\r\n          </button>\r\n          <button className=\"key\" value=\"g\" onClick={keySubmit}>\r\n            G\r\n          </button>\r\n          <button className=\"key\" value=\"h\" onClick={keySubmit}>\r\n            H\r\n          </button>\r\n          <button className=\"key\" value=\"j\" onClick={keySubmit}>\r\n            J\r\n          </button>\r\n          <button className=\"key\" value=\"k\" onClick={keySubmit}>\r\n            K\r\n          </button>\r\n          <button className=\"key\" value=\"l\" onClick={keySubmit}>\r\n            L\r\n          </button>\r\n          <button id=\"enter\" className=\"key\" value=\"enter\" onClick={keySubmit}>\r\n            Enter\r\n          </button>\r\n        </div>\r\n        <div id=\"row-3\" className=\"row\">\r\n          <button className=\"key\" value=\"z\" onClick={keySubmit}>\r\n            Z\r\n          </button>\r\n          <button className=\"key\" value=\"x\" onClick={keySubmit}>\r\n            X\r\n          </button>\r\n          <button className=\"key\" value=\"c\" onClick={keySubmit}>\r\n            C\r\n          </button>\r\n          <button className=\"key\" value=\"v\" onClick={keySubmit}>\r\n            V\r\n          </button>\r\n          <button className=\"key\" value=\"b\" onClick={keySubmit}>\r\n            B\r\n          </button>\r\n          <button className=\"key\" value=\"n\" onClick={keySubmit}>\r\n            N\r\n          </button>\r\n          <button className=\"key\" value=\"m\" onClick={keySubmit}>\r\n            M\r\n          </button>\r\n          <button\r\n            id=\"new-game\"\r\n            className=\"key\"\r\n            value=\"newgame\"\r\n            onClick={keySubmit}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* 规则弹框 */}\r\n      {ruleState === true ? <Rule /> : ''}\r\n      {/* 提示位数缺少弹框 */}\r\n      {deficiency === true ? (\r\n        <AlertBoxdif\r\n          setdeficiency={setdeficiency}\r\n          msg={`pleace input ${type === 1 ? 6 : 7} characters`}\r\n        ></AlertBoxdif>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* 提示重新开始弹框 */}\r\n      {enterState === true ? (\r\n        <AlertBoxenter\r\n          setenterState={setenterState}\r\n          msg={`Please click new game to restart the game`}\r\n        ></AlertBoxenter>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {Word === true ? (\r\n        <AlertWord\r\n          setWord={setWord}\r\n          msg={`Please enter a valid word`}\r\n        ></AlertWord>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/inputbox.jsx",[],[],"/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/rule.jsx",["100","101","102"],[],"\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Ruletext from './ruletext'\r\nexport default function Rule (props) {\r\n  // 子向父传值\r\n  const { setMaking } = props;\r\n  const dispatch = useDispatch();\r\n  const changeState = (event) => {\r\n    dispatch({\r\n      type: \"hideruleState\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id='shadowbox'>\r\n      <div className='contentbox'>\r\n        <p className='tit'>rule</p>\r\n        <Ruletext />\r\n        <p className='footers'>\r\n          <button className='defaultbtn' onClick={changeState}>close</button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/ruletext.jsx",["103"],[],"\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function Ruletext (props) {\r\n  // 子向父传值\r\n  const { setMaking } = props;\r\n  const changeState = (event) => {\r\n    setMaking(false)\r\n  };\r\n  useEffect(() => {\r\n    // document.title = `Hello, ${props.name}`;\r\n  }, []);\r\n\r\n  return (\r\n    <div className='RuleBox'>\r\n      <ul>\r\n        <li>1.Enter a 5-letter word</li>\r\n        <li>2.Check the tile colors.\r\n          <br></br>- A green tile indicates that you've guessed the correct letter in the correct place in the word\r\n          <br></br>- A yellow tile means you've guessed a letter that's in the word, but not in the right spot\r\n          <br></br>- A gray tile means that letter is not in today's word\r\n        </li>\r\n        <li>3.Guess another word\r\n          <br />- If you correctly guessed a letter at the correct position (a green tile), make sure to use that letter at that position in your second guess.\r\n          <br />- Letters can appear more than once in the same word\r\n\r\n        </li>\r\n        <li>4.Continue entering your guesses until all letters are green</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/alertboxenter.jsx",["104"],[],"\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function Ruletext (props) {\r\n  // 子向父传值\r\n  const { setenterState } = props;\r\n  const changeState = (event) => {\r\n    setenterState(false)\r\n  };\r\n\r\n  return (\r\n    <div className='alertBox'>\r\n      <div className='content'>\r\n        <p className='tit'>Tips</p>\r\n        <p className='desc'>{props.msg}</p>\r\n        <p className='footer'>\r\n          <button className='defaultbtn' onClick={changeState}>close</button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/alertboxdif.jsx",["105"],[],"\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function Ruletext (props) {\r\n  // 子向父传值\r\n  const { setdeficiency } = props;\r\n  const changeState = (event) => {\r\n    setdeficiency(false)\r\n  };\r\n\r\n  return (\r\n    <div className='alertBox'>\r\n      <div className='content'>\r\n        <p className='tit'>Tips</p>\r\n        <p className='desc'>{props.msg}</p>\r\n        <p className='footer'>\r\n          <button className='defaultbtn' onClick={changeState}>close</button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/Users/lucyhoney/Dropbox/Mac/Desktop/case/src/page/alertword.jsx",["106"],[],"\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function AlertWord (props) {\r\n  // 子向父传值\r\n  const { setWord } = props;\r\n  const changeState = (event) => {\r\n    setWord(false)\r\n  };\r\n\r\n  return (\r\n    <div className='alertBox'>\r\n      <div className='content'>\r\n        <p className='tit'>Tips</p>\r\n        <p className='desc'>{props.msg}</p>\r\n        <p className='footer'>\r\n          <button className='defaultbtn' onClick={changeState}>close</button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}",{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":11},{"ruleId":"107","severity":1,"message":"111","line":7,"column":20,"nodeType":"109","messageId":"110","endLine":7,"endColumn":26},{"ruleId":"107","severity":1,"message":"112","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":9},{"ruleId":"107","severity":1,"message":"113","line":9,"column":3,"nodeType":"109","messageId":"110","endLine":9,"endColumn":8},{"ruleId":"107","severity":1,"message":"114","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":9},{"ruleId":"115","severity":1,"message":"116","line":29,"column":9,"nodeType":"117","messageId":"118","endLine":33,"endColumn":10},{"ruleId":"107","severity":1,"message":"119","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":12},{"ruleId":"107","severity":1,"message":"120","line":3,"column":18,"nodeType":"109","messageId":"110","endLine":3,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":9,"column":3,"nodeType":"123","messageId":"124","endLine":35,"endColumn":4},{"ruleId":"107","severity":1,"message":"125","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"126","line":8,"column":9,"nodeType":"109","messageId":"110","endLine":8,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":24,"column":22,"nodeType":"129","messageId":"130","endLine":24,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":38,"column":22,"nodeType":"129","messageId":"130","endLine":38,"endColumn":24},{"ruleId":"107","severity":1,"message":"131","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":61,"column":31,"nodeType":"129","messageId":"130","endLine":61,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":64,"column":16,"nodeType":"129","messageId":"130","endLine":64,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":73,"column":36,"nodeType":"129","messageId":"130","endLine":73,"endColumn":38},{"ruleId":"127","severity":1,"message":"128","line":75,"column":16,"nodeType":"129","messageId":"130","endLine":75,"endColumn":18},{"ruleId":"127","severity":1,"message":"132","line":188,"column":22,"nodeType":"129","messageId":"130","endLine":188,"endColumn":24},{"ruleId":"107","severity":1,"message":"133","line":300,"column":9,"nodeType":"109","messageId":"110","endLine":300,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":92,"column":6,"nodeType":"136","endLine":92,"endColumn":8,"suggestions":"137","suppressions":"138"},{"ruleId":"107","severity":1,"message":"139","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"140","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":21},{"ruleId":"107","severity":1,"message":"141","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"126","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"139","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"139","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"139","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'logo' is defined but never used.","'Link' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Outlet' is defined but never used.","'changeState' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useParams' is defined but never used.","Expected '===' and instead saw '=='.","'size' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeworldState'. Either include it or remove the dependency array.","ArrayExpression",["142"],["143"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'setMaking' is assigned a value but never used.",{"desc":"144","fix":"145"},{"kind":"146","justification":"147"},"Update the dependencies array to be: [changeworldState]",{"range":"148","text":"149"},"directive","",[2742,2744],"[changeworldState]"]